,Аналитическое Мишление/Логика,Тестирование,Автоматизация,Тестирование Производительности
Intern,"Логика работает хорошо, как минимум на простых бытовых задачах. 
Подсказки может воспринимать не сразу.
Нужна наработка навыков, потенциал к которым наблюдается.","Генерирует достаточное количество тест-кейсов в типичных тестированию задачах.
Знакомство с теорией тестирования - большой плюс. ","Умение программировать простейшие алгоритмы на псевдоязыке.
Базовые знания некоторых инструментов автоматизации или языков не обязательны, но являются большим плюсом. ",
Junior,"Базовые навыки. 
Логические задачи может не решать без подсказок. 
Некоторые подсказки для сложных случаев воспринимает с трудом, или медленно.
Есть хорошие идеи, но часто не может сделать соответствующие выводы, и доделать задачу до конца.
Может терятся в собственных мыслях ... 
","Способен как-то реализовывать и прогонять основной набор тестов, вероятно далеко не самым оптимальным способом, соответственно требующим менторинга для доведения до качественного результата",,
,,"Знаком(а) с теорией тестирования. 
Знания базовых техник Тест Дизайна и умение их применять.
Может генерировать тест кейсы по типам тестирования. 
Не пропускает важные тест кейсы на стадии тест-дизайна для доменной области с которой знаком, как минимум если пропускает тест кейс то хотя бы задает вопрос близкий к соответствующему кейсу
Знаком с более техническими инструментами типа Chrome Dev Tools","Свободно владеет базовой частью одного из языков программирования.
(частью, используемой, например, в автоматизации веб-интерфейса на регулярной основе – базовые выражения и конструкции, переменные, методы, модули, классы).

Свободно программирует базовые алгоритмы.

Базовое ООП (понимание основных принципов) - это плюс.

Может начинать базовую автоматизацию с нуля (первые сценарии, которые фактически тестируют приложение, по крайней мере, локально, без: репортов, параллелизации, CI, организация по тестовым наборам, и т.д.)

Знаком с Git (clone, pull, commit, push)","Около 1 проекта по тестированию производительности.

Понимание теории: модели нагрузки (load, performance, ...), профили нагрузки, NFR, типы метрик производительности (responce time, throughput, ...), и т.д.

Какой-то опыт с генераторами нагрузки (что-либо типа JMeter, Gatling, locust, и т.д.)

Реалізация линейных сценариев (рекординг сценариев, параметризация, кореляция запросов между собой, построение E2E сценариев).

Запуск тестов и поверхностный анализ результатов с целью понять на уровне ""все плохо или не очень"".

Знание Технологий Web на уровне мануального тестувальния (пр: протоколы, прокси, клиент-серверная архитектура, основны роботы с БД, SQL максимум до уровня простых Join, и т.д.)"
Middle,"Решает задачи. Возможно с некоторыми подсказками. Использует базовые навыки системного подхода, организовывает свои мысли одним из способов.",Имеет опыт выполнения основного спектра задач тестировщика и старается максимально качественно выполнять поставленные перед ним задачи с желательным ревью от более опытных инженеров.,,
,,"Довольно сильные навыки, как минимум в основных техниках Тест Дизайна, типах тестирования, и т.д. (Теория). Может написать Тест План. Может приоретизировать тест-кейсы. Имеет понимание и опыт в QA (в отличие от QC) на некоторых уровнях. Опыт в статичном тестировании. Знаком с лучшими практиками в отрасли. 
Знаком с некоторыми инструментами для автоматизации типа Postman.","Свободно владеет одним из языков.
Знает и использует шаблоны автоматизации, лучшие практики и принципы (DRY, OOP, т. д.)
Свободно владеет одним инструментом автоматизации в одной области и, по крайней мере, базово знаком с другой областю – например опытен в автоматизации веб-сервисов/АPI и знает основы автоматизации веб-интерфейсов.  
Может с нуля построить полную автоматизацию, результат чего может быть увиден, прослежен (создать проект, настроить отчеты, встроить в CI/CD, возможно делегируя некоторые административные задачи)
Слышал/частично знаком с Test Doubles (моки, стабы, и т.д)
Git: работа с ветками (создание, слияние, разрешение конфликтов)","2+ проекта (~ полных цыкла) по тестированию производительности.

Уверенное понимание теории с нюансами на основе практического опыта.

Опыт построения проекта с нуля. 
Опыт работы с инструментами мониторинга (пр: InfluxDB для сохранения данных + Grafana для визуализации + Telegraf для сбора серверных метрик).

Реализация более сложных нелинейных сценариев с дополнительными проверками (робота с циклами, ветвлениями в реализации в зависимости от контекста, и т.д.).

Детальний анализ результатов, включая поверхностное исследование причин. Построение отчетов.
Поддержка тестовой документации (отчеты, тест план и стратегія).

Интеграция с CI.

Как плюс – опыт в тестировании продуктивности Client-Side (как минимум понимание основных концепций и целей)"
Senior,"Умеет логически выстраивать способ решения задач,
с глубоким структурным анализом.
Возможно, с небольшими консультациями, уточнениями.
Уверенно строит блок-схемы или диаграммы для основных алгоритмов. ","Самостоятельно ставит задачи и может построить процес тестирования и провести его качественно. Может оценить результат других (провести ревью) и дать отзыв, возможно не самым методичным способом с точки зрения ""преподавания/менторинга"".",,
,,"Сильные навыки и опыт в Тест-Планировании/Стратегии/Дизайне/Артифактах.
Может эффективно оптимизировать количество тест-кейсов, планировать регрессию. 
Хорошо понимает QA в процессе разработки продукта, знает как строить процес тестирования и QA, как минимум реплицируя тот же процес к которому привык. Может делегировать работу, помочь распределить задачи внутри команды.
Знаком с нефункциональным тестированием в зависимости от актуальности для соответствующей доменной области.","Более глубокие знания в области разработки программного обеспечения, знакомство с архитектурой, шаблонами. Может спланировать и реализовать стратегию автоматизации (как реализовать, когда запускать и что – приемочные тесты/смоук/полная регрессия/по фичам/по окружению), покрытие по уровням тестирования, способствовать оптимальному покрытию на более низких уровнях (модульного тестирования). 
Свободно владеет 2+ инструментами для автоматизации во соответствующих областях (например, UI + API), по крайней мере, знаком (~ слышал) с инструментами для нефункционального тестирования (например JMeter для тестирования производительности). Понимание особенностей нативных тестов и соответствующих инструментов, их плюсы и минусы (например для сферы мобильной разработки – отличие Appium от XCUITest + Espresso)
Может оптимально интегрировать свои тесты в пайплайн CI/CD. 
Может начать строить автоматизацию на ""любом"" другом языке, исходя из своего предыдущего опыта, зная лучшие практики и архитектурные решения, с учетом дополнительной подготовки и иследования по подбору схожих инструментов к родному его стеку технологий.
Знаком с Test Doubles (моки, стабы, и т.д)
Git: rebase, squash, amend, cтратегии (как минимум слышал о trunk-based, feature-branches, и т.д.)","~2-3 проекта (~ полных цыкла)

Опыт построения процесса и фреймворка для тестирования производительности
* настройка инструментов мониторинга (включая кастомизацию дэшбордов по метрикам) плюс их интеграция с генераторами нагрузки)
* анализ целей, умение задать нужные вопросы соответствующим людям
* отбор сценариев, 
* подготовка окружения
* cоздание тестовой документации с нуля под контекст проекта (тест план, стратегия, отчеты, и т.д.)

Реализация сценариев с кастомной логикой, выходящей за границы дефолтных компонентов инструмента типа JMeter (например через использование JSR223 елементов в том же JMeter, используя Groovy как язык сценариев более отпимальный для JMeter)

Детальный анализ результатов, включая детальное исследование причин, анализируя серверные метрики, логи. 
Опыт использование инструментов профайлинга (типа DotMemory, DotTrace для DotNet; VisualVM и JProfiler для Java). Как плюс - профайлинг баз данных.
Рекомендации по улучшениям/оптимизациям на основе результатов/отчетов (вероятно без глибокого анализа кода, а просто подсвечивание главных проблем исходя из своего опыта, например стандартных проблем с балансировщиками, БД, и т.д.)

Желателен опыт Сlient-Side (практическое понимание что/когда/зачем). По инструментам: sitespeed.io, google lighthouse, webpagetest.org либо другие, типа того же JMeter"
Lead,"Легко и самостоятельно справляется со сложными не типичными его опыту задачами, учитывая сложные условия.","Знание различных вариантов решения одной и той же проблемы с точки зрения архитектуры. Знаком со всеми последними тенденциями в отрасли. Способность аргументировать свой выбор. Широкий опыт проектов разного калибра и контекста. Искусен в планировании, делегировании, лидерстве, наставничестве. Умеет организовать работу команды, подобрать персонал и выростить его.",,
,,"Имеет опыт построения QA в процессе разработки программного обеспечения с нуля.
Глубокие знания SDLC и культуры DevOps,
Знаком с разными альтернативными решениями типичных задач.
Способность аргументировать свой выбор. Умение находить баланс, оставаться прагматичным, KISS, YAGNI.
Знаком c трендами в современном QA.
Широкие знания/понимание нефункционального тестирования в зависимости от актуальности для соответствующей доменной области.
","Уверенно строит Пирамиду Тестирования оптмизируя ее ""форму"".
Уверенные знания подхода модульных тестов.
Понимание культуры DevOps и опыт реализации, как минимум со стороны автоматизации тестирования.",